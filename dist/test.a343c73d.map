{"version":3,"sources":["css.js","test.js"],"names":["string","demo","document","querySelector","demo2","time","n","id","player","events","init","innerHTML","substr","innerText","bindEvents","play","key","hasOwnProperty","value","console","log","onclick","run","length","window","clearInterval","scrollTop","pause","setInterval","slow","fast"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA,IAAMA,wnYAAN;;AAyWA;kBACeA;;;;AC3Wf;;;;;;AAEA;;AAEA,IAAMC,OAAOC,SAASC,aAAT,CAAuB,OAAvB,CAAb,EALA;;;AAOA,IAAMC,QAAQF,SAASC,aAAT,CAAuB,QAAvB,CAAd;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;AACA,IAAIE,OAAO,GAAX;AACA,IAAIC,IAAI,CAAR;AACA,IAAIC,WAAJ;;AAEA;;AAEA,IAAMC,SAAS;AACXC,YAAS;AACL,qBAAa,OADR;AAEL,oBAAY,MAFP;AAGL,oBAAa,MAHR;AAIL,oBAAY;AAJP,KADE;;AAQXC,UAAM,gBAAM;AACRN,cAAMO,SAAN,GAAkBX,cAAOY,MAAP,CAAc,CAAd,EAAiBN,CAAjB,CAAlB;AACAL,aAAKY,SAAL,GAAiBb,cAAOY,MAAP,CAAc,CAAd,EAAiBN,CAAjB,CAAjB;AACAE,eAAOM,UAAP;AACAN,eAAOO,IAAP;AAIH,KAhBU;;AAmBXD,gBAAY,sBAAM;AACd;AACD,aAAK,IAAIE,GAAT,IAAiBR,OAAOC,MAAxB,EAAgC;AAC3B,gBAAID,OAAOC,MAAP,CAAcQ,cAAd,CAA6BD,GAA7B,CAAJ,EAAuC;AACnC,oBAAME,QAAQV,OAAOC,MAAP,CAAcO,GAAd,CAAd;AACAG,wBAAQC,GAAR,CAAYF,KAAZ;AACAhB,yBAASC,aAAT,CAAuBa,GAAvB,EAA4BK,OAA5B,GAAsCb,OAAOU,KAAP,CAAtC;AACH;AACR;AAIA,KA/BU;;AAiCX;;AAEAI,SAAK,eAAM;;AAEP;AACAhB,aAAK,CAAL;AACA,YAAIA,IAAIN,cAAOuB,MAAf,EAAuB;AACnBC,mBAAOC,aAAP,CAAqBlB,EAArB;AACA;AACH;AACD;AACA;;AAEA;AACAH,cAAMO,SAAN,GAAkBX,cAAOY,MAAP,CAAc,CAAd,EAAiBN,CAAjB,CAAlB;AACAL,aAAKY,SAAL,GAAiBb,cAAOY,MAAP,CAAc,CAAd,EAAiBN,CAAjB,CAAjB;;AAEAL,aAAKyB,SAAL,GAAiB,KAAjB;AACH,KAnDU;;AAqDV;AACDX,UAAM,gBAAM;AACR,YAAIR,EAAJ,EAAO;AACHC,mBAAOmB,KAAP;AACH;;AAGDpB,aAAKqB,YAAYpB,OAAOc,GAAnB,EAAwBjB,IAAxB,CAAL;AACA,eAAOE,EAAP;AACH,KA9DU;AA+DX;;AAEAoB,WAAO,iBAAM;AACT,eAAOH,OAAOC,aAAP,CAAqBlB,EAArB,CAAP;AACH,KAnEU;;AAqEZ;AACCsB,UAAM,gBAAM;AACR;AACArB,eAAOmB,KAAP;;AAEAtB,eAAO,GAAP;AACAE,aAAKC,OAAOO,IAAP,EAAL;AACAI,gBAAQC,GAAR,CAAY,IAAZ;AACH,KA7EU;;AAgFX;;AAEAU,UAAM,gBAAM;AACRX,gBAAQC,GAAR,CAAY,IAAZ;AACAZ,eAAOmB,KAAP;AACAtB,eAAO,EAAP;AACA;AACA;;AAEAG,eAAOO,IAAP;AACAI,gBAAQC,GAAR,CAAY,IAAZ;AAEH;;AAML;AAlGe,CAAf,CAmGCZ,OAAOE,IAAP;;AAID;;;AAIA;AACA","file":"test.a343c73d.map","sourceRoot":"..\\src","sourcesContent":["// 模块化 导出css的字符串\r\n\r\nconst string =\r\n`\r\n\r\n/* 新版盒子 */\r\n/* 块级元素，其 width 属性的值会自动撑满父元素的 width 区域 heigt只会撑开父元素内容的heigth*/\r\n/* margin: 0; padding: 0;!*指所有的标签,这里是把所有标签的内外边距设为0 */\r\n// 避免* 影响到button的盒模型样式,\r\n.skin *{box-sizing: border-box; margin: 0; padding: 0;} \r\n::after ,::before {box-sizing: border-box;}\r\n/* 鼻子的思路：做一个三角形 */\r\n\r\nbody {\r\n/* 背景色的第二种写法 */\r\n    background-color: yellow;\r\n}\r\n\r\n.skin{\r\n    position: relative;\r\n    background: yellow;\r\n    height: 100vh;\r\n}\r\n.nose{\r\n    /* 将鼻子的颜色改为黑色 */\r\n    border: 10px solid black;\r\n    \r\n    width: 0px;\r\n    height: 0px;\r\n    position: relative;\r\n    left: 50%;\r\n    top: 145px;\r\n    margin-left: -10px;\r\n    /* 使鼻子图像变为三角形  方法：把底部去掉，左右颜色设为透明 宽高设为0px*/\r\n    border-color: black transparent transparent;\r\n    border-bottom: none;\r\n    /* 如果元素被覆盖了则用层叠上下文把元素优先放在上面 */\r\n    z-index: 10;\r\n\r\n\r\n\r\n}\r\n\r\n/* 把比卡丘鼻子设为圆弧形 */\r\n\r\n.yuan {\r\n    position: absolute;\r\n    width: 20px;\r\n    height: 6px;\r\n    /* border: 1px solid green; */\r\n    /* ! 负值的意思是  在边框外部离顶部的距离,所以负值越大离基点越远,同理left是距离基点的边距*/\r\n    /* 微调top,radius,使嘴唇接近原图 */\r\n    top:-16px;\r\n    left: -10px;\r\n    /* 左右边角圆形， 下边两边设置没有颜色 */\r\n    border-radius: 14px 14px 0 0 ; \r\n    /* 背景颜色红色 */\r\n    background:black;\r\n\r\n\r\n    \r\n\r\n}\r\n\r\n/* 眼睛 */\r\n.eye {\r\n    border: 2px solid #000;\r\n    border-radius:50%;\r\n    width: 64px;\r\n    height: 64px;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 100px;\r\n    /* 负值怎么理解？ */\r\n    margin-left: -32px;\r\n    background: #303031;\r\n    \r\n}\r\n\r\n/* 眼睛中的白色图像,使用伪元素 */\r\n\r\n/* relative定位基点是元素本身 */\r\n.eye::before{\r\n    content: '';\r\n    border:  2px solid 000;\r\n    width: 32px;\r\n    height: 32px;\r\n    /* 伪元素默认为 内联元素,内联元素宽高设置无效,设置为块元素 */\r\n    display: block;\r\n    background: white;\r\n    border-radius: 50%;\r\n    position: relative;\r\n    left: 4px;\r\n    \r\n\r\n}\r\n\r\n/* 左眼 */\r\n.eye.left {\r\n    /* ! */ \r\n    transform: translateX(-100px);\r\n}\r\n/* 右眼 */\r\n.eye.right {\r\n     /* ! */\r\n    transform: translateX(100px);\r\n}\r\n\r\n/* 嘴部--> 第三步绘制 的上部图案 */\r\n.mouth {\r\n    /* 嘴巴位置大小 */\r\n    /* 全部完成后最后去除边框，边框的作用是对嘴唇进行修改时作为距离的参照使用，因此用完后去除 */\r\n    /* border:1px solid red ; */\r\n    width: 200px;\r\n    height: 200px;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 183px;\r\n    /* ? */\r\n    margin-left:-100px;\r\n}\r\n\r\n\r\n/* 嘴唇上半部思路:  当作一个椭圆形的四分之一 */\r\n\r\n\r\n/* 将上嘴唇整体调整位置-->加高 */\r\n.mouth .up {\r\n    position: relative;\r\n    /* 不断的微调与原型一致 */\r\n    top: -20px;\r\n    z-index: 1;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/* ! 如果遇到样式不对 一般有哪些调试方法可以快速解决问题,浏览器控制台!浏览器F12调试-->\r\n一般样式完全没有的原因是1.html标签写错,2.css定位元素写错, */\r\n\r\n\r\n/* 由于下嘴唇背景色覆盖了上嘴唇的区域，使用上嘴唇去除背景色，设为黄色 */\r\n.mouth .up .lip {\r\n    /* ？为什么说这里是透明色！ 盒子未设置背景色默认为透明色 */\r\n    background: yellow;\r\n}\r\n\r\n.mouth .up  .lip.left {\r\n    border: 5px solid black;\r\n    /* border-bottom: 5px solid black;\r\n    border-left: 3px solid black; */\r\n    height: 30px;\r\n    width: 100px;\r\n    border-radius: 0 0 0 50px;\r\n    \r\n    \r\n    /* 透明色? 为什么边框颜色是绿色的? */\r\n    border-top-color: transparent;\r\n    border-right-color: transparent;\r\n    /* 使用rotate使嘴唇的位置与原图一致,不断调整倾斜角度 */\r\n\r\n    transform: rotate(-18deg) translateX(-53px) ;\r\n    position: absolute;\r\n    /* 左侧距离  设置为距离基点一半 */\r\n    left: 50%;\r\n    /* 左侧外边距  设置为 距离基点 -50px 的长度 ? */\r\n    margin-left: -50px;\r\n}\r\n\r\n\r\n\r\n/* 复制 上嘴唇左边部分复制到右边 进行修改 */\r\n\r\n\r\n.mouth .up  .lip.right {\r\n    border: 5px solid black;\r\n    /* border-bottom: 5px solid black;  \r\n    border-left: 3px solid black;  */\r\n    \r\n    height: 30px;\r\n    width: 100px;\r\n    /* 圆角与右侧微调,设左下边为圆角 */\r\n    border-radius: 0 0 50px 0px;\r\n    \r\n    position: absolute;\r\n    /* 透明色? 为什么边框颜色是绿色的? */\r\n    border-top-color: transparent;\r\n    border-right-color: transparent;\r\n    /* 使用rotate使嘴唇的位置与原图一致,不断调整倾斜角度 */\r\n    /* 与左上嘴唇相反-->进行旋转 正值,  */\r\n    transform: rotate(18deg) translateX(53px);\r\n\r\n    left:50%;\r\n    /* 左侧外边距  设置为 距离基点 -50px 的长度 ? */\r\n    margin-left: -50px;\r\n}\r\n\r\n/* 因为上面的 css绘制 上嘴唇的形状多了一个宽,所有使用伪元素去除 该宽线 */\r\n.mouth .up .lip.left::before{\r\n    content: '';\r\n    display: block;\r\n    width: 7px;\r\n    height: 30px;\r\n    position: absolute;\r\n    /* border: 1px solid green; */\r\n    /* 移动至目标边框并覆盖该边框 */\r\n    right: -5px;\r\n    bottom: 0px;\r\n    /* 存在空白痕迹 */\r\n    background:yellow ;\r\n}\r\n\r\n\r\n/* 右上嘴唇 与左侧一样 用伪元素 去除多余的边框，复制修改右侧的代码即可 */\r\n.mouth .up .lip.right::before{\r\n    content: '';\r\n    display: block;\r\n    width: 7px;\r\n    height: 30px;\r\n    position: absolute;\r\n    /* border: 1px solid green; */\r\n    /* 修改为 向左偏移 -5px覆盖原有多余边框 */\r\n    left: -5px;\r\n    bottom: 0px;\r\n    /* 存在空白痕迹 */\r\n    background:yellow ;\r\n}\r\n\r\n\r\n\r\n/* 下嘴唇思路： 先用radius圆角 画一个 不规则的 椭圆 取1/6，再画一扇形 取上半部分，将两个图形结合起来即可 */\r\n/* 椭圆 */\r\n.mouth .down {\r\n    /* 设定下嘴唇的区域 */\r\n    /* border:  1px solid red; */\r\n    height:  160px;\r\n    position: absolute;\r\n    top: 5px;\r\n    bottom: 0px;\r\n    width: 100%;\r\n    /* 隐藏元素内溢出的部分 */\r\n    overflow: hidden;\r\n}\r\n\r\n\r\n/* 扇形 */\r\n.mouth .down .sanxing {\r\n    border:3px solid black ;\r\n    width: 150px;\r\n    height: 1000px;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left:50% ;\r\n    margin-left: -75px;\r\n    /* 使用圆角绘制下嘴唇 -->遇到无法解决的问题可以百度查解决的方案，如这里如何\r\n    使用圆角radius去绘制下嘴唇*/\r\n    border-radius: 75px /200px;\r\n    background:#9B000A;\r\n    overflow: hidden;\r\n}\r\n\r\n\r\n/* 舌头的制作， 在扇形中  添加一个子元素，对子元素进行 样式修改 */\r\n.mouth .down .sanxing .yuan1 {\r\n    /* border: 1px solid green; */\r\n    width: 200px;\r\n    height: 300px;\r\n    /* 初始位置在父元素1000px高度的地方，所以页面不可见 ，进行定位*/\r\n    position: absolute;\r\n    bottom: -179px;\r\n    left: 50%;\r\n    margin-left:  -100px; \r\n    border-radius: 100px;\r\n    background:  #ff485f;;\r\n\r\n}\r\n\r\n \r\n.face {\r\n    position: absolute;\r\n    left: 50%;\r\n    border: 3px solid black;\r\n    width: 88px;\r\n    height: 88px;\r\n    top: 200px;\r\n    margin-left: -44px;\r\n    z-index: 3;\r\n\r\n\r\n}\r\n\r\n.face.left {\r\n    /* position: absolute; */\r\n    /* ?如何避免css的拼写错误，有没有插件 */\r\n    transform:  translateX(-180px);\r\n    background: red;\r\n    border-radius: 50%;\r\n}\r\n\r\n.face.right {\r\n    transform:  translateX(180px);\r\n    background: red;\r\n    border-radius: 50%;\r\n}  \r\n\r\n\r\n/* 鼻子晃动的效果，使用伪类建立一个样式，\r\n再用hover -->触发 选择鼠标指针浮动在其上的元素，并设置其样式：*/\r\n\r\n/* \r\n@keyframes能够创建动画。 创建动画的原理是将一套 CSS 样式逐渐变化为另一套样式。\r\nanimation属性控制动画的外观：\r\nanimation-name设置动画的名称， 也就是要绑定的选择器的@keyframes的名称。\r\nanimation-duration设置动画所花费的时间,\r\n@keyframes+hover 可以实现点鼠demo标悬停在元素（按钮）上时，实现播放动画效果； \r\n\r\n 语法如下 */\r\n@keyframes wave{\r\n    0%{\r\n        transform: rotate(0deg);\r\n\r\n    }\r\n    33%{\r\n        transform: rotate(15deg);\r\n\r\n    }\r\n    66%{\r\n        transform: rotate(-15deg);\r\n        \r\n    }\r\n    100%{\r\n        transform: rotate(0deg);\r\n        \r\n    }\r\n}\r\n.nose:hover {\r\n    /* transform-origin */\r\n    transform-origin: 50% 100%;\r\n    animation: wave 1000ms infinite;\r\n}\r\n\r\n\r\n/* 闪电的位置样式 */\r\n.face > img {\r\n    /* border: 1px solid red; */\r\n    position:  absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n\r\n    /* 默认看不见 */\r\n    /* display: none; */\r\n\r\n}\r\n\r\n/* 对左脸闪电进行反转位置 */\r\n.face.left > img {\r\n    transform: rotateY(180deg); \r\n    transform-origin: 0 0 ;\r\n}\r\n`\r\n\r\n\r\n// 导出字符串string\r\nexport default string;","// 使用模块化导入css字符串\r\nimport string from './css.js'\r\n\r\n//  通过dom拿到标签元素\r\n\r\nconst demo = document.querySelector(\"#demo\")\r\n\r\nconst demo2 = document.querySelector(\"#demo2\")\r\n\r\n// demo2.innerText  = string.substr( 0, n)\r\n\r\n// demo.innerHTML = string.substr( 0, n)\r\n\r\n// setInterval() 方法可按照指定的周期（以毫秒计）来调用函数或计算表达式。\r\n// 返回一个id,调用 clearInterval() 可以关闭函数。\r\n\r\n\r\n// 快慢速思路，定义一个速度的变量time控制time的值\r\nlet time = 100\r\nlet n = 1\r\nlet id\r\n\r\n// 最后一步优化代码，思路把整个播放器作为一个对象，以对象的形式构造。\r\n\r\nconst player = {\r\n    events : {\r\n        '#btnPause': 'pause',\r\n        '#btnPlay' :'play',\r\n        '#btnslow' : 'slow',\r\n        '#btnfast' :'fast',\r\n    },\r\n\r\n    init: () => {\r\n        demo2.innerHTML = string.substr(0, n)\r\n        demo.innerText = string.substr(0, n)\r\n        player.bindEvents()\r\n        player.play()\r\n       \r\n\r\n\r\n    },\r\n    \r\n\r\n    bindEvents: () => {\r\n        // 这里出现了一个低级失误,少写了符号#导致执行失败\r\n       for (let key in  player.events) {\r\n            if (player.events.hasOwnProperty(key)) {\r\n                const value = player.events[key]\r\n                console.log(value)\r\n                document.querySelector(key).onclick = player[value]\r\n            }\r\n    }\r\n\r\n\r\n\r\n    },\r\n\r\n    //  run函数：把css的样式 输出到页面中\r\n\r\n    run: () => {\r\n\r\n        // 定义一个箭头函数\r\n        n += 1\r\n        if (n > string.length) {\r\n            window.clearInterval(id)\r\n            return\r\n        }\r\n        // console.log(n + ':' + string.substr(0,n))\r\n        //  最重要的节点： 同时使用标签的innertext 和innerhtml的标签展示一个\r\n\r\n        // 让文本部分滚动条向下移动  为该滚动条的长度 \r\n        demo2.innerHTML = string.substr(0, n)\r\n        demo.innerText = string.substr(0, n)\r\n\r\n        demo.scrollTop = 99999\r\n    },\r\n\r\n     //    play函数：按指定时间间隔（）执行run函数\r\n    play: () => {\r\n        if (id){\r\n            player.pause()\r\n        }\r\n\r\n        \r\n        id = setInterval(player.run, time)\r\n        return id\r\n    },\r\n    // pause函数：暂停执行play\r\n\r\n    pause: () => {\r\n        return window.clearInterval(id)\r\n    },\r\n\r\n   // slow函数：慢速执行play函数，修改time的值达到慢速的效果\r\n    slow: () => {\r\n        // console.log('慢速');\r\n        player.pause()\r\n\r\n        time = 150\r\n        id = player.play()\r\n        console.log('慢速');\r\n    },\r\n\r\n\r\n    // fast函数：慢速执行play函数，修改time的值达到快速的效果\r\n    \r\n    fast: () => {\r\n        console.log('快速');\r\n        player.pause()\r\n        time = 10\r\n        // run后面不能加（），否则是返回值,\r\n        // 出现的bug，这里使用let或var id导致id的值成为函数局部变量无法被外部访问，而再次触发暂停和其他事件时，无法拿到当前快速函数的id值，因为其他事件引用的全局变量的id值\r\n\r\n        player.play()\r\n        console.log('快速');\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n// 把重复的代码用函数封装，播放，和暂停等\r\n player.init()\r\n\r\n\r\n\r\n//  默认执行setInterval函数\r\n\r\n\r\n\r\n// 暂停\r\n// $btnPause =\r\n\r\n\r\n\r\n\r\n\r\n"]}